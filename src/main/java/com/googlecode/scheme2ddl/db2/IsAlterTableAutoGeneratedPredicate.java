package com.googlecode.scheme2ddl.db2;

import com.googlecode.scheme2ddl.db2.domain.Db2LookInfo;
import org.apache.commons.collections.Predicate;
import org.apache.commons.collections.PredicateUtils;
import org.springframework.stereotype.Component;

/**
 * Check that passed Db2LookInfo object is ALTER TABLE statement matches pattern
 *    <code>ALTER TABLE "([^a-zA-Z0-9\s])+"."([^a-zA-Z0-9\s])+" ALTER COLUMN "([^a-zA-Z0-9\s])+" RESTART WITH (\d+)</code>
 * <p/>
 * For example
 * <code>ALTER TABLE "MY      "."STUDENT" ALTER COLUMN "SID" RESTART WITH 100</code>
 * will rewturn true
 *
 * @author ar
 * @since Date: 05.04.2015
 */
@Component
public class IsAlterTableAutoGeneratedPredicate implements Predicate {


    private static String pattern = "ALTER TABLE \"([a-zA-Z0-9\\s])+\"\\.\"([a-zA-Z0-9\\s])+\" ALTER COLUMN \"([a-zA-Z0-9\\s])+\" RESTART WITH (\\d+)\\s*";

    public boolean evaluate(Object object) {
        if (!(object instanceof Db2LookInfo)){
            throw new IllegalArgumentException();

        }

        boolean result = false;

        result =
        ((Db2LookInfo) object).getObjType().equals("TABLE")
                &&
        ((Db2LookInfo) object).getSqlOperation().equals("ALTER")
                &&
       ((Db2LookInfo) object).getSqlStmt().matches(pattern )
        ;
        return !result;
    }
}
