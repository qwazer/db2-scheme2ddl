package com.googlecode.scheme2ddl.db2.filter;

import com.googlecode.scheme2ddl.db2.IsAlterTableAutoGeneratedPredicate;
import com.googlecode.scheme2ddl.db2.domain.Db2LookInfo;
import org.junit.Test;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

/**
 * @author ar
 * @since Date: 05.04.2015
 */
public class IsAlterTableAutoGeneratedPredicateTest {


    IsAlterTableAutoGeneratedPredicate predicate = new IsAlterTableAutoGeneratedPredicate();

    @Test
    public void testAlterTableAutoIncrement() throws Exception {
        Db2LookInfo db2LookInfo = new Db2LookInfo();
        db2LookInfo.setObjName("A");
        db2LookInfo.setObjType("TABLE");
        db2LookInfo.setSqlOperation("ALTER");
        db2LookInfo.setSqlStmt("ALTER TABLE \"MY      \".\"STUDENT\" ALTER COLUMN \"SID_ID\" RESTART WITH 100 ");
        assertFalse(predicate.evaluate(db2LookInfo));

    }

    @Test
    public void testAlterTableNotAutoincrement() throws Exception {
        Db2LookInfo db2LookInfo = new Db2LookInfo();
        db2LookInfo.setObjName("A");
        db2LookInfo.setObjType("TABLE");
        db2LookInfo.setSqlOperation("ALTER");
        db2LookInfo.setSqlStmt("ALTER TABLE \"MY      \".\"ORG_TEMP\" \n" +
                "\tADD CONSTRAINT \"DEPTNAME\" CHECK \n" +
                "\t\t(LENGTH(RTRIM(DEPTNAME)) >0)\n" +
                "\tENFORCED\n" +
                "\tENABLE QUERY OPTIMIZATION ;");
        assertTrue(predicate.evaluate(db2LookInfo));

    }
}